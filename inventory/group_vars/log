bonnyci_logs_apache_apt_install:
  - libapache2-mod-proxy-uwsgi

bonnyci_logs_apache_mods_install:
  - rewrite.load
  - proxy.load
  - proxy_uwsgi.load

bonnyci_logs_apache_vhosts:
  - name: logs
    server_name: "{{ bonnyci_logs_apache_server_name | default('logs') }}"
    aliases: "{{ bonnyci_logs_apache_server_aliases | default(omit) }}"
    document_root: "{{ bonnyci_logs_root_dir }}/logs"
    document_root_allow_override: None
    document_root_options: "+Indexes +FollowSymLinks"

    vhost_extra: |
      <Directory /etc/os_loganalyze/wsgi>
        Require all granted
      </Directory>

      ErrorLog /var/log/apache2/os-loganalyze.log
      CustomLog /var/log/apache2/os-loganalyze_access.log combined

      RewriteEngine On

      AddType text/plain .log
      AddType text/plain .sh
      AddType text/plain .yml
      AddType text/plain .yaml

      # use Apache to compress the results afterwards, to save on the wire
      # it's approx 18x savings of wire traffic to compress. We need to
      # compress by content types that htmlify can produce
      AddOutputFilterByType DEFLATE text/plain text/html

      <FilesMatch \.html\.gz$>
        ForceType text/html
        AddDefaultCharset UTF-8
        AddEncoding x-gzip gz
      </FilesMatch>

      <FilesMatch \.css$>
        # mod_mime_magic is sometimes passing css files as asm sources
        # e.g css files generated by coverage reports
        ForceType text/css
      </FilesMatch>

      # rewrite txt.gz & console.html[.gz] files to map to our internal htmlify
      # wsgi app
      # PT, Pass-through:  to come back around and get picked up by the
      #                    WSGIScriptAlias
      # NS, No-subrequest: on coming back through, mod-autoindex may have added
      #                    index.html which would match the !-f condition. We
      #                    therefore ensure the rewrite doesn't trigger by
      #                    disallowing subrequests.
      RewriteRule ^/(.*\.txt\.gz)$ /htmlify/$1 [QSA,L,PT,NS]
      RewriteRule ^/(.*console\.html(\.gz)?)$ /htmlify/$1 [QSA,L,PT,NS]

      # Check if the request exists as a file, directory or symbolic link
      # If not, write the request to htmlify to see if we can fetch from swift
      RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f
      RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-d
      RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-l
      RewriteCond %{REQUEST_FILENAME} !^/icon
      RewriteRule ^/(.*)$ /htmlify/$1 [QSA,L,PT,NS]

      ProxyPass /htmlify/ uwsgi://localhost:3310/

      ServerSignature Off

bonnyci_logs_loganalyze_file_conditions:
  - filename_pattern: ^.*\.txt(\.gz)?$
    filter: SevFilter
    view: HTMLView
  - filename_pattern: ^.*console\.html(\.gz)?$
    filter: SevFilter
    view: HTMLView
  - filename_pattern: ^.*$
    filter: NoFilter
    view: PassthroughView
