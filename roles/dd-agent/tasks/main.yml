---
- name: install dd repo key
  apt_key:
    id: C7A7DA52
    keyserver: keyserver.ubuntu.com

- name: install dd repo
  apt_repository:
    repo: "deb https://apt.datadoghq.com/ stable main"
    update_cache: yes

- name: install dependency packages
  apt:
    name: "{{ item }}"
    state: installed
    update_cache: yes
    cache_valid_time: 30
  with_items:
    - apt-transport-https

- name: install datadog agent package
  apt:
    name: datadog-agent
    state: installed
    update_cache: yes
    cache_valid_time: 30
  notify:
    - restart dd-agent

# This is required to call datadog_monitor with ansible and later to use the
# datadog callback for more integration into ansible runs
# within datadog.
- name: install datadog pip
  pip:
    name: datadog
    virtualenv: /opt/datadog

- name: configure datadog
  template:
    src: etc/dd-agent/datadog.conf
    dest: /etc/dd-agent/datadog.conf
    owner: dd-agent
    group: root
  notify:
    - restart dd-agent

- name: create fragments dir for assembling config
  file:
    path: "/etc/dd-agent/frags/{{ item }}"
    state: directory
    owner: dd-agent
    group: root
  with_items: "{{ dd_agent.frags }}"

- name: drop base fragments
  copy:
    dest: /etc/dd-agent/frags/{{ item }}/0{{ item }}
    src: etc/dd-agent/frags/{{ item }}/0{{ item }}
    owner: dd-agent
    group: root
  with_items: "{{ dd_agent.frags }}"
  notify:
    - assemble dd-agent config frags

# Flush handlers to avoid a start + restart scenario
- meta: flush_handlers

- name: start datadog agent
  service:
    name: datadog-agent
    state: started
    enabled: yes
