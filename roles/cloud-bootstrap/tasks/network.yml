---
- name: Create control-plane network
  os_network:
    cloud: "{{ cloud }}"
    name: control-plane
    project: "{{ prod_project }}"
    auth:
      project_name: "{{ prod_project }}"
  register: control_plane_network

- name: Create control-plane subnet
  os_subnet:
    cloud: "{{ cloud }}"
    name: control-plane-subnet
    network_name: "{{ control_plane_network.network.id }}"
    cidr: "{{ controlplane_network_cidr }}"
    project: "{{ prod_project }}"
    auth:
      project_name: "{{ prod_project }}"
  register: control_plane_subnet

- name: Create nodepool network
  os_network:
    cloud: "{{ cloud }}"
    name: nodepool
    shared: "{{ split_tenants }}"
    project: "{{ prod_project }}"
    auth:
      project_name: "{{ prod_project }}"
  register: nodepool_network

- name: Create nodepool subnet
  os_subnet:
    cloud: "{{ cloud }}"
    name: nodepool-subnet
    network_name: "{{ nodepool_network.network.id }}"
    cidr: "{{ nodepool_network_cidr }}"
    project: "{{ prod_project }}"
    auth:
      project_name: "{{ prod_project }}"
  register: nodepool_subnet

- name: Create router
  os_router:
    cloud: "{{ cloud }}"
    name: bonnyci-router
    network: "{{ external_network_name }}"
    interfaces:
        - "{{ control_plane_subnet.subnet.id }}"
        - "{{ nodepool_subnet.subnet.id }}"
    project: "{{ prod_project }}"
    auth:
      project_name: "{{ prod_project }}"

- name: Create security groups
  os_security_group:
    cloud: "{{ cloud }}"
    name: "{{ item.name }}"
    auth:
      project_name: "{{ prod_project }}"
  with_items: "{{ security_group_rules }}"

- name: Create security group rules
  os_security_group_rule:
    cloud: "{{ cloud }}"
    security_group: "{{ item.0.name }}"
    protocol:  "{{ item.1.protocol | default('tcp') }}"
    port_range_min: "{{ item.1.port_min | default(item.1.port)  }}"
    port_range_max: "{{ item.1.port_max | default(item.1.port) }}"
    remote_ip_prefix: "{{ item.1.remote_cidr | default(omit) }}"
    remote_group: "{{ item.1.remote_group | default(omit) }}"
    auth:
      project_name: "{{ prod_project }}"
  with_subelements:
    - "{{ security_group_rules }}"
    -  "rules"

- name: Create nodepool SSH security group rule
  os_security_group_rule:
    cloud: "{{ cloud }}"
    security_group: "default"
    protocol: "tcp"
    port_range_min: "22"
    port_range_max: "22"
    remote_ip_prefix: "{{ controlplane_network_cidr }}"
    auth:
      project_name: "{{ prod_nodepool_project }}"


