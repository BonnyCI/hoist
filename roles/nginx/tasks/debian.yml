- name: Install nginx
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - nginx

- name: Remove default site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: Reload nginx

# this task doesn't make as much sense with nginx but it means that
# letsencrypt can work the same way across apache and nginx
- name: create document root
  file:
    path: "{{ item.document_root }}"
    state: directory
    owner: "{{ item.document_root_owner | default(omit) }}"
    group: "{{ item.document_root_group | default(omit) }}"
    mode: "{{ item.document_root_mode | default(omit) }}"
  with_items: "{{ nginx_sites }}"
  when: item.document_root is defined

- name: Install sites
  template:
    src: vhost.conf
    dest: "/etc/nginx/sites-available/{{ item.name }}.conf"
    mode: "0644"
  when: item.state | default('present') == 'present'
  with_items: "{{ nginx_sites }}"
  notify: Reload nginx

- name: Enable sites
  file:
    src: "/etc/nginx/sites-available/{{ item.name }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.name }}.conf"
    force: yes
    state: link
  when: item.state | default('present') == 'present'
  with_items: "{{ nginx_sites }}"
  notify: Reload nginx

- name: Disable sites
  file:
    dest: "/etc/nginx/sites-enabled/{{ item.name }}"
    state: absent
  with_items: "{{ nginx_sites }}"
  when: item.state | default('present') in ['absent', 'removed']
  notify: Reload nginx

- name: Remove sites
  file:
    dest: "/etc/nginx/sites-available/{{ item.name }}"
    state: absent
  with_items: "{{ nginx_sites }}"
  when: item.state | default('present') == 'removed'
  notify: Reload nginx

- meta: flush_handlers

- name: Start nginx
  service:
    name: nginx
    state: started
    enabled: yes
