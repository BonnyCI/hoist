---
- name: Create the zuul group
  group:
    name: zuul
    state: present

- name: Create zuul user
  user:
    name: zuul
    group: zuul
    home: /var/lib/zuul
    system: yes
    state: present

- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: zuul
    group: zuul
  with_items:
    - /etc/zuul/config
    - /var/log/zuul

- name: "Create zuul's ~/.ssh"
  file:
    path: /var/lib/zuul/.ssh/
    state: directory
    owner: zuul
    group: zuul
    mode: 0700

- name: Install zuul private ssh key
  copy:
    dest: /var/lib/zuul/.ssh/id_rsa
    content: "{{ secrets.ssh_keys.zuul.private }}"
    owner: zuul
    group: zuul
    mode: 0600

- name: Install zuul public ssh key
  copy:
    dest: /var/lib/zuul/.ssh/id_rsa.pub
    content: "{{ secrets.ssh_keys.zuul.public }}"
    owner: zuul
    group: zuul
    mode: 0644

- name: Install zuul integration key
  copy:
    dest: /etc/zuul/integration.key
    content: "{{ secrets.zuul_github_integration_key_content }}"
    owner: zuul
    group: zuul
    mode: 0400
  when: secrets.zuul_github_integration_key_content | default(False)

- name: Install zuul config
  template:
    src: etc/zuul/zuul.conf
    dest: /etc/zuul/zuul.conf
    owner: zuul
  notify: Restart zuul

- name: Install datadog logging library
  pip:
    name: git+https://github.com/BonnyCI/datadog-logging.git#egg=datadog-logging
    state: latest
    virtualenv: "{{ zuul_venv_path }}"
  when: zuul_use_datadog_logging

- name: Install service environment configs
  template:
    src: etc/default/zuul
    dest: /etc/default/{{ item }}
  with_items: "{{ zuul_components }}"
  notify: Restart zuul

- name: Install systemd unit files
  template:
    src: etc/systemd/system/zuul.service
    dest: /etc/systemd/system/{{ item }}.service
  with_items: "{{ zuul_components }}"
  notify:
    - Reload systemd units
    - Restart zuul

- name: Configure zuul-server
  include: server.yml
  when: "'zuul-server' in zuul_components"

- name: Configure zuul-scheduler
  include: scheduler.yml
  when: "'zuul-scheduler' in zuul_components"

- name: Configure zuul-launcher
  include: launcher.yml
  when: "'zuul-launcher' in zuul_components"

- name: Configure zuul-executor
  include: executor.yml
  when: "'zuul-executor' in zuul_components"

- name: Configure zuul-merger
  include: merger.yml
  when: "'zuul-merger' in zuul_components"

- name: Stop unwanted zuul services
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  when: "item not in zuul_components"
  with_items:
    - zuul-scheduler
    - zuul-launcher
    - zuul-merger
    - zuul-server
  register: stop_zuul
  failed_when:
    - stop_zuul|failed
    - "'Could not find the requested service' not in stop_zuul.msg"

- meta: flush_handlers

- name: Enable zuul services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items: "{{ zuul_components }}"
