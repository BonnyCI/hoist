- name: Install deps
  apt:
    name: "{{ item }}"
    state: installed
    update_cache: true
  with_items:
    - python-dev
    - libssl-dev
    - run-one

- name: Install ansible
  pip:
    virtualenv: "{{ ansible_runner_virtualenv }}"
    name: ansible

- name: Create callback plugins path
  file:
    path: "{{ ansible_runner_virtualenv }}/plugins/callback"
    state: directory
    owner: "{{ ansible_runner_user }}"

- block:
  - name: Install datadog callback plugin
    get_url:
      url: "{{ datadog_callback_url }}"
      dest: "{{ ansible_runner_virtualenv }}/plugins/callback/datadog_callback.py"
      owner: "{{ ansible_runner_user }}"

  - name: Install datadog callback configuration
    copy:
      dest: "{{ ansible_runner_virtualenv }}/plugins/callback/datadog_callback.yml"
      content: "api_key: {{ secrets.datadog.api_key }}"
      owner: "{{ ansible_runner_user }}"
  when: datadog_enabled | default(True) | bool
  tags:
    - datadog

- name: Install config file
  template:
    src: ansible-runner-config
    dest: /etc/default/{{ ansible_runner_job }}
    mode: 0600
    owner: "{{ ansible_runner_user }}"

- name: Install ansible-runner
  copy:
    src: usr/local/bin/ansible-runner
    dest: /usr/local/bin/ansible-runner
    mode: 0755
    owner: root
    group: root

- name: Ensure source dir
  file:
    path: /opt/source
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Download source
  git:
    repo: "{{ ansible_runner_repo }}"
    dest: "/opt/source/{{ ansible_runner_job }}"
    update: true

- name: Set source directory owner
  file:
    state: directory
    path: "/opt/source/{{ ansible_runner_job }}"
    recurse: yes
    owner: "{{ ansible_runner_user }}"

- name: Ensure cron log path
  file:
    state: directory
    path: "/var/www/html/cron-logs/{{ ansible_runner_job }}"
    mode: 0755
    owner: "{{ ansible_runner_user }}"
    group: www-data

- name: check secrets exist
  stat:
    path: "{{ ansible_runner_secrets_path }}"
  register: ansible_runner_secrets_path_stat

- name: ensure secrets owner
  file:
    state: file
    path: "{{ ansible_runner_secrets_path }}"
    mode: 0400
    owner: root
    group: root
  when:
    - ansible_runner_secrets_path_stat.stat.exists
    - ansible_runner_secrets_path_stat.stat.isreg

- name: ensure secrets base acl
  acl:
    name: "{{ ansible_runner_secrets_path }}"
    etype: mask
    permissions: r
    follow: no
    state: present
  when:
    - ansible_runner_secrets_path_stat.stat.exists
    - ansible_runner_secrets_path_stat.stat.isreg

- name: ensure runner can read secrets
  acl:
    name: "{{ ansible_runner_secrets_path }}"
    entity: "{{ ansible_runner_user }}"
    etype: user
    follow: no
    permissions: r
    state: present
  when:
    - ansible_runner_secrets_path_stat.stat.exists
    - ansible_runner_secrets_path_stat.stat.isreg
    - ansible_runner_user != 'root'

- block:
  - name: check vault password exist
    stat:
      path: "{{ ansible_runner_vault_password_file }}"
    register: ansible_runner_vault_password_file_path_stat

  - name: ensure vault password owner
    file:
      state: file
      path: "{{ ansible_runner_vault_password_file }}"
      mode: 0400
      owner: root
      group: root
    when:
      - ansible_runner_vault_password_file_path_stat.stat.exists
      - ansible_runner_vault_password_file_path_stat.stat.isreg

  - name: ensure vault password base acl
    acl:
      name: "{{ ansible_runner_vault_password_file }}"
      etype: mask
      permissions: r
      follow: no
      state: present
    when:
      - ansible_runner_vault_password_file_path_stat.stat.exists
      - ansible_runner_vault_password_file_path_stat.stat.isreg

  - name: ensure runner can read vault password
    acl:
      name: "{{ ansible_runner_vault_password_file }}"
      entity: "{{ ansible_runner_user }}"
      etype: user
      follow: no
      permissions: r
      state: present
    when:
      - ansible_runner_vault_password_file_path_stat.stat.exists
      - ansible_runner_vault_password_file_path_stat.stat.isreg
      - ansible_runner_user != 'root'
  when: ansible_runner_vault_password_file is defined

- name: Add ansible-runner cron job
  cron:
    name: "ansible-runner deploy {{ ansible_runner_job }}"
    minute: "{{ ansible_runner_minute | default(omit) }}"
    user: "{{ ansible_runner_user }}"
    job: "/usr/local/bin/ansible-runner {{ ansible_runner_job }} -e @{{ ansible_runner_secrets_path }}"
